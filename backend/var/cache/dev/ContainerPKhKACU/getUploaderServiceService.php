<?php

namespace ContainerPKhKACU;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getUploaderServiceService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Services\UploaderService' shared autowired service.
     *
     * @return \App\Services\UploaderService
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/Services/UploaderService.php';
        include_once \dirname(__DIR__, 4).'/vendor/aws/aws-sdk-php/src/AwsClientInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/aws/aws-sdk-php/src/AwsClientTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/aws/aws-sdk-php/src/AwsClient.php';
        include_once \dirname(__DIR__, 4).'/vendor/aws/aws-sdk-php/src/S3/S3ClientInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/aws/aws-sdk-php/src/Api/Parser/PayloadParserTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/aws/aws-sdk-php/src/S3/S3ClientTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/aws/aws-sdk-php/src/S3/S3Client.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/string/Slugger/SluggerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/translation-contracts/LocaleAwareInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/string/Slugger/AsciiSlugger.php';

        return $container->privates['App\\Services\\UploaderService'] = new \App\Services\UploaderService(($container->privates['slugger'] ??= new \Symfony\Component\String\Slugger\AsciiSlugger('en')), (\dirname(__DIR__, 4).'/public/uploads'), new \Aws\S3\S3Client(['version' => 'latest', 'region' => 'eu-central-1', 'credentials' => ['key' => $container->getEnv('AWS_ACCESS_KEY'), 'secret' => $container->getEnv('AWS_SECRET_KEY')]]), $container->getEnv('APP_ENV'));
    }
}
